from typing import List

from telebot.types import Message

from loader import bot
from database.models import User, HistoryReq, Offer
from states.param_states import BotStates


@bot.message_handler(commands=['history'])
def show_history(message: Message) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :return: None
    """
    user_id = message.from_user.id
    user = User.get_or_none(User.user_id == user_id)
    if user is None:
        bot.reply_to(message, "üò¢–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ù–∞–ø–∏—à–∏—Ç–µ /start")
        return

    bot.send_message(message.chat.id, '‚¨áÔ∏è–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤:‚¨áÔ∏è')
    last_reqs: List[HistoryReq] = user.history.order_by(-HistoryReq.id).limit(10)
    result = []
    result.extend(map(str, reversed(last_reqs)))
    if not result:
        bot.send_message(message.from_user.id, "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞—á")
        return
    result.append("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.\n"
                  "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /cancel, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥")
    bot.send_message(message.from_user.id, "\n".join(result))
    bot.set_state(message.from_user.id, BotStates.show_offers, message.chat.id)


@bot.message_handler(state=BotStates.show_offers)
def show_offers(message: Message) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏.
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :return: None
    """

    history_id = int(message.text)

    history = HistoryReq.get_or_none(HistoryReq.id == history_id)
    if history is None:
        bot.send_message(message.from_user.id, "–ò—Å—Ç–æ—Ä–∏–∏ —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        return
    else:
        offers: List[Offer] = history.offers
        result = []
        result.extend(map(str, offers))
        bot.send_message(message.from_user.id, "\n".join(result))
